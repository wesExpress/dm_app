cmake_minimum_required(VERSION 3.20)
SET(CMAKE_C_STANDARD 99)

PROJECT(app)

ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

SET(SOURCES app.c gui.c DarkMatter/dm_impl.c DarkMatter/dm_window.c )

if(APPLE)
    SET(SOURCES ${SOURCES} DarkMatter/dm_metal.m)
else()
    SET(SOURCES ${SOURCES} DarkMatter/dm_dx12.c)
endif()

ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC . lib/ lib/cimgui/ lib/cimgui/imgui/ DarkMatter/lib/)

if(VULKAN)
    FIND_PACKAGE(Vulkan REQUIRED)
    TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC ${Vulkan_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${Vulkan_LIBRARIES})

    ADD_SUBDIRECTORY(DarkMatter/lib/VulkanMemoryAllocator)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC VulkanMemoryAllocator)
else()
    if(WIN32)
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC d3d12 dxgi dxguid d3dcompiler)
    endif()
endif()

if(APPLE)
    FIND_LIBRARY(APPLE_FWK_COCOA Cocoa REQUIRED)
    FIND_LIBRARY(APPLE_FWK_METAL Metal REQUIRED)
    FIND_LIBRARY(APPLE_FWK_QUARTZ_CORE QuartzCore REQUIRED)
    FIND_LIBRARY(APPLE_FWK_FOUNDATION Foundation REQUIRED)

    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${APPLE_FWK_COCOA} ${APPLE_FWK_METAL} ${APPLE_FWK_QUARTZ_CORE} ${APPLE_FWK_FOUNDATION})

    TARGET_COMPILE_OPTIONS(${PROJECT_NAME} PRIVATE -Wno-nullability-completeness)
endif()

